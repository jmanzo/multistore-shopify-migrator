// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Connection {
  id        Int     @id @default(autoincrement())
  shop      String
  storeName String
  apiSecret String
  apiKey    String
}

model Menu {
  id          Int      @id @default(autoincrement())
  shopifyId   String
  handle      String
  title       String
  items       MenuItem[]

  @@unique([shopifyId, handle])
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  position    Int
  title       String
  type        String
  url         String
  menuId      Int
  menu        Menu     @relation(fields: [menuId], references: [id])
  tags        Tag[]
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String
  menuItemId  Int
  menuItem    MenuItem @relation(fields: [menuItemId], references: [id], onDelete: Cascade)

  @@unique([name, menuItemId])
}

model Product {
  id          Int      @id @default(autoincrement())
  shopifyId   String
  title       String
  handle      String
  bodyHtml    String
  vendor      String
  createdAt   DateTime
  updatedAt   DateTime
  variants    Variant[]
  collections Collection[]
  metafields  Metafield[]
}

model Variant {
  id          Int      @id @default(autoincrement())
  shopifyId   String
  title       String
  price       Float    
  sku         String
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
}

model Collection {
  id          Int      @id @default(autoincrement())
  shopifyId   String
  title       String
  handle      String
  products    Product[]
  metafields  Metafield[]
}

model Metafield {
  id            Int      @id @default(autoincrement())
  productId     Int
  collectionId  Int
  shopifyId     String
  namespace     String
  key           String
  value         String
  valueType     String
  ownerType     String
  ownerId       String
  product       Product? @relation(fields: [productId], references: [id])
  collection    Collection? @relation(fields: [collectionId], references: [id])
}
